__metaclass__ = type #use Python 3 classes

# only Dodge/Block/Shrug are caBlue cards

def detNewInitiative(self, card, index):
    'determine initiative based on current intiative and the card.panel picked'
    newInitiative = self.initiative
    if self.initiative == 'have':
        if 'lose initiative' in hand[card]['attributes'][index]:
            newInitiative = 'dont have'
    elif self.initiative == 'dont have':
        if 'gain initiative' in hand[card]['attributes'][index]:
            newInitiative = 'have'
    return newInitiative

# trialCardPanelList = ['<card1>', 'index1'] or
# ['<card1>', 'index1', '<card2>', 'index2']
def pickCard():
    bestRelCardVal=-100
    for card in hand.keys():
        for ii in range(lend(hand[card]['attributes'])):
            newInitiative = detNewInitiative(card, ii)
            foo = myHandValue(newInitiative, card, ii)
            trialVal = foo.pop()
            trialVal -= yourHandValue(newInitiative)
            trialCardPanelList = foo
            if newInitiative == 'faceoff':
                thisRelCardVal = trialVal + \
                                 myFaceoffStatusValue(newInitiative, card, ii) - \
                                 yourFaceoffStatusValue(newInitiative, card, ii)
            else:
                thisRelCardVal = trialVal + \
                                 myStatusValue(newInitiative, card, ii) - \
                                 yourStatusValue(newInitiative, card, ii)
            if thisRelCardVal > bestRelCardVal:
                bestRelCardVal = thisRelCardVal
                bestCardPanel = trialCardPanelList
    return bestCardPanel

# myFaceoffStatusValue is like the regular My StatusValue but takes into account faceoff info


                



